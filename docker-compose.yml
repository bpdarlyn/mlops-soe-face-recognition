version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: mlflow-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow-server
    restart: unless-stopped
    depends_on:
      - db
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "5001:5000"
    volumes:
      - mlflow_artifacts:/mlflow/artifacts

  trainer:
    build:
      context: .
      dockerfile: Dockerfile.trainer
    container_name: trainer
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      TF_CPP_MIN_LOG_LEVEL: "2"
      PYTHONPATH: /app
      KAGGLE_USERNAME: ${KAGGLE_USERNAME}
      KAGGLE_KEY: ${KAGGLE_KEY}
    volumes:
      - ./:/app
      - mlflow_artifacts:/mlflow/artifacts
    working_dir: /app
    tty: true
    stdin_open: true

  face-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: face-analytics-api
    restart: unless-stopped
    depends_on:
      - db
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - mlflow_artifacts:/mlflow/artifacts
      - api_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: face-analytics-frontend
    restart: unless-stopped
    volumes:
      - ./frontend/:/app
    depends_on:
      - face-api
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://face-api:8000

volumes:
  mysql_data:
  mlflow_artifacts:
  api_uploads:
